kind: Template
apiVersion: template.openshift.io/v1
objects:
  - apiVersion: v1
    kind: Service
    spec:
      ports:
        - name: 8080-tcp
          port: 8080
          protocol: TCP
          targetPort: 8080
        - name: 8443-tcp
          port: 8443
          protocol: TCP
          targetPort: 8443
      selector:
        deploymentconfig: ${BC_NAME}
      sessionAffinity: None
    metadata:
      name: ${BC_NAME}
      labels:
        deploymentconfig: ${BC_NAME}
  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      name: ${BC_NAME}
      labels:
        deploymentconfig: ${BC_NAME}
        app.kubernetes.io/part-of: ${LABEL_NAME}
    spec:
      triggers:
        - type: "ConfigChange"
        - type: "ImageChange"
          imageChangeParams:
            automatic: true
            from:
              kind: "ImageStreamTag"
              name: ${BC_NAME}:${IMAGE_TAG}
              namespace: ${BUILD_NAMESPACE}
            containerNames:
              - ${BC_NAME}
      replicas: ${{MIN_REPLICAS}}
      revisionHistoryLimit: 2
      selector:
        deploymentconfig: ${BC_NAME}
      strategy:
        type: Rolling
      template:
        metadata:
          labels:
            deploymentconfig: ${BC_NAME}
            deploy-branch: ${REPO_BRANCH}
        spec:
          volumes:
            - name: site-data-volume
              configMap:
                name: subpath-env
          containers:
            - image: >-
                image-registry.openshift-image-registry.svc:5000/${BUILD_NAMESPACE}/${BC_NAME}
              volumeMounts:
                - name: site-data-volume
                  mountPath: /var/site_data
              imagePullPolicy: Always
              name: ${BC_NAME}
              ports:
                - containerPort: 8080
                  protocol: TCP
                - containerPort: 8443
                  protocol: TCP
              resources:
                limits:
                  cpu: ${CPU_LIMITS}
                  memory: ${MEM_LIMITS}
                requests:
                  cpu: ${CPU_REQUESTS}
                  memory: ${MEM_REQUESTS}
              lifecycle:
                postStart:
                  exec:
                    command:
                      - /bin/bash
                      - '-c'
                      - >
                        touch /var/www/html/storage/logs/laravel.log && tail -f
                        /var/www/html/storage/logs/laravel.log > /proc/1/fd/2 &
              env:
                - name: ENV_ARG
                  valueFrom:
                    secretKeyRef:
                      name: ${API_ENV}
                      key: ".env"
                - name: DBHOST
                  valueFrom:
                    secretKeyRef:
                      name: simsdb-pguser-read-only-user
                      key: "host"
                - name: DBNAME
                  valueFrom:
                    secretKeyRef:
                      name: simsdb-pguser-read-only-user
                      key: "dbname"
                - name: DBUSER
                  valueFrom:
                    secretKeyRef:
                      name: simsdb-pguser-read-only-user
                      key: "user"
                - name: DBPASS
                  valueFrom:
                    secretKeyRef:
                      name: simsdb-pguser-read-only-user
                      key: "password"
                - name: DBPORT
                  valueFrom:
                    secretKeyRef:
                      name: simsdb-pguser-read-only-user
                      key: "port"
              livenessProbe:
                exec:
                  command:
                  - /bin/sh
                  - -c
                  - /var/www/html/probe-check.sh
                initialDelaySeconds: 1000
                periodSeconds: 15
                timeoutSeconds: 5
                successThreshold: 1
                failureThreshold: 3
  - apiVersion: route.openshift.io/v1
    kind: Route
    spec:
      host: ${ROUTE_HOST}
      path: /edwapi/
      port:
        targetPort: 8080-tcp
      to:
        kind: Service
        name: ${BC_NAME}
        weight: 100
      wildcardPolicy: None
      tls:
        termination: edge
        insecureEdgeTerminationPolicy: Redirect
    metadata:
      name: ${BC_NAME}
      labels:
        deploymentconfig: ${BC_NAME}
      annotations:
        haproxy.router.openshift.io/ip_whitelist: 142.22.0.0/12 142.32.0.0/12 142.35.0.0/12

  - apiVersion: networking.k8s.io/v1
    kind: NetworkPolicy
    metadata:
      name: ${BC_NAME}-allow-external
      spec:
        podSelector:
          matchLabels:
            deploymentconfig: ${BC_NAME}
        ingress:
          - ports:
            - protocol: TCP
              port: 8080
            - protocol: TCP
              port: 80
            - protocol: TCP
              port: 443
        policyTypes:
          - Ingress
parameters:
  - name: OC_USER_ID
    required: false
  - name: NAME
    required: true
    description: some desc for this component
  - name: LABEL_NAME
    required: true
    description: some desc for this component
  - name: IMAGE_TAG
    required: true
    description: some line to describe the image_tag_x parameter
  - name: LICENSE_PLATE
    required: true
  - name: LICENSE_BRANCH
    required: true
  - name: BUILD_NAMESPACE
    required: true
    description: some line to describe the image_tag_x parameter
  - name: DEPLOY_NAMESPACE
    required: true
    description: some line to describe the image_tag_x parameter
  - name: REPO_BRANCH
    required: true
    description: some line to describe the image_tag_x parameter
  - name: REPO_NAME
    required: false
  - name: CPU_REQUESTS
    required: true
  - name: CPU_LIMITS
    required: true
  - name: MEM_REQUESTS
    required: true
  - name: MEM_LIMITS
    required: true
  - name: MIN_REPLICAS
    required: true
  - name: MAX_REPLICAS
    required: true
  - name: BUILD_CPU_REQUESTS
    required: false
  - name: BUILD_CPU_LIMITS
    required: false
  - name: BUILD_MEM_REQUESTS
    required: false
  - name: BUILD_MEM_LIMITS
    required: false
  - name: API_ENV
    required: false
  - name: SUB_DOMAIN
    required: false
  - name: BC_NAME
    required: false
  - name: ROUTE_HOST
    required: true
